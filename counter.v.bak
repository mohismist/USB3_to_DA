module counter(
	input clk,
	input rst_n,
	input CTL0,
	input wrfull,
	output reg wrreq,
	output reg CTL1,
	output [12:0] Address
);

reg [12:0] cnt;
reg [2:0] state;

assign Address = cnt;

always@(wrfull, state)
begin
	if (state==3'b010) begin
		wrreq <= ~wrfull;
		CTL1 <= wrfull;
	end
	else begin
		wrreq <= 1'b0;
		CTL1 <= 1'b1;
	end
end


always@(posedge clk or negedge rst_n)
begin
	if(~rst_n) begin
		cnt <= 13'd0;
		state <= 3'b000;
	end
	else begin
		if (CTL0==1'b1)
			state <= 3'b000;
		else
			case (state)
				3'b000: begin
					cnt <= 14'd0;
					if (CTL0==1'b0) state <= 3'b001;
				end
				3'b001: begin
					state <= 3'b010;
				end
				3'b010:	begin
					if (~wrfull) begin
						cnt <= cnt + 14'd1;
					end
					if (cnt==4096) state <= 3'b011;
				end
				default:	begin
					if (CTL0==1'b1) state <= 3'b000;					
				end
			endcase
	end
end

endmodule
