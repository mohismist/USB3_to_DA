--sld_ela_trigger DATA_BITS=145 INVERSION_MASK=00000000 INVERSION_MASK_LENGTH=1 LEVEL_NAMES="sld_reserved_FPGA_FPGA_1_8163,basic,1,sld_reserved_FPGA_FPGA_3_ec3b," POWER_UP_TRIGGER=0 TRIGGER_LEVEL=3 acq_clk data_in reset_all setup_bit_in setup_bit_out setup_ena tck trigger_level_match_out
--VERSION_BEGIN 13.1 cbx_mgl 2013:10:23:18:06:54:SJ cbx_sld_ela_trigger 2013:10:23:18:05:48:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION sld_ela_basic_multi_level_trigger (acq_clk, data_in[144..0], reset_all, setup_bit_in, setup_ena, tck)
WITH ( ASYNC_ENABLED, DATA_BITS, PIPELINE, SYNC_ENABLED, TRIGGER_LEVEL)
RETURNS ( setup_bit_out, trigger_level_match_out[0..0]);
FUNCTION sld_reserved_FPGA_FPGA_1_8163 (acq_clk, data_in[144..0], reset_all, setup_bit_in, setup_ena, tck)
WITH ( ASYNC_ENABLED, DATA_BITS, SYNC_ENABLED, TRIGGER_LEVEL)
RETURNS ( setup_bit_out, trigger);
FUNCTION sld_reserved_FPGA_FPGA_3_ec3b (acq_clk, data_in[144..0], reset_all, setup_bit_in, setup_ena, tck)
WITH ( ASYNC_ENABLED, DATA_BITS, SYNC_ENABLED, TRIGGER_LEVEL)
RETURNS ( setup_bit_out, trigger);

--synthesis_resources = sld_ela_basic_multi_level_trigger 1 sld_reserved_FPGA_FPGA_1_8163 1 sld_reserved_FPGA_FPGA_3_ec3b 1 
SUBDESIGN sld_ela_trigger_0mq
( 
	acq_clk	:	input;
	data_in[144..0]	:	input;
	reset_all	:	input;
	setup_bit_in	:	input;
	setup_bit_out	:	output;
	setup_ena	:	input;
	tck	:	input;
	trigger_level_match_out[2..0]	:	output;
) 
VARIABLE 
	mgl_prim2 : sld_ela_basic_multi_level_trigger
		WITH (
			ASYNC_ENABLED = 0,
			DATA_BITS = 145,
			PIPELINE = 1,
			SYNC_ENABLED = 0,
			TRIGGER_LEVEL = 1
		);
	mgl_prim1 : sld_reserved_FPGA_FPGA_1_8163
		WITH (
			ASYNC_ENABLED = 0,
			DATA_BITS = 145,
			SYNC_ENABLED = 0,
			TRIGGER_LEVEL = 1
		);
	mgl_prim3 : sld_reserved_FPGA_FPGA_3_ec3b
		WITH (
			ASYNC_ENABLED = 0,
			DATA_BITS = 145,
			SYNC_ENABLED = 0,
			TRIGGER_LEVEL = 1
		);

BEGIN 
	mgl_prim2.acq_clk = acq_clk;
	mgl_prim2.data_in[] = data_in[];
	mgl_prim2.reset_all = reset_all;
	mgl_prim2.setup_bit_in = mgl_prim3.setup_bit_out;
	mgl_prim2.setup_ena = setup_ena;
	mgl_prim2.tck = tck;
	mgl_prim1.acq_clk = acq_clk;
	mgl_prim1.data_in[] = data_in[];
	mgl_prim1.reset_all = reset_all;
	mgl_prim1.setup_bit_in = mgl_prim2.setup_bit_out;
	mgl_prim1.setup_ena = setup_ena;
	mgl_prim1.tck = tck;
	mgl_prim3.acq_clk = acq_clk;
	mgl_prim3.data_in[] = data_in[];
	mgl_prim3.reset_all = reset_all;
	mgl_prim3.setup_bit_in = setup_bit_in;
	mgl_prim3.setup_ena = setup_ena;
	mgl_prim3.tck = tck;
	setup_bit_out = mgl_prim1.setup_bit_out;
	trigger_level_match_out[] = ( mgl_prim3.trigger, mgl_prim2.trigger_level_match_out[], mgl_prim1.trigger);
END;
--VALID FILE
